services:
  db:
    image: postgres:17.0
    command: -p $DB_PORT
    ports:
      - "$DB_PORT:$DB_PORT"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      TZ: $TIMEZONE
      PGTZ: $TIMEZONE
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER -d $DB_NAME"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    restart: on-failure
    build: ./backend
    command: fastapi dev main.py --host 0.0.0.0 --port $BE_PORT
    ports:
      - "$BE_PORT:$BE_PORT"
    develop:
      watch:
        - path: ./backend
          target: /app
          action: sync
    volumes:
      - ./backend/alembic/versions:/app/alembic/versions
      - uploads:/app/uploads
    environment:
      - TZ=$TIMEZONE
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  frontend:
    build: ./frontend
    command: npm run dev
    ports:
      - "$FE_PORT:$FE_PORT"
    develop:
      watch:
        - path: ./frontend
          target: /home/app
          action: sync
          ignore:
            - node_modules/
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_API_URL=$PROTOCOL://$DOMAIN:$BE_PORT/
    env_file:
      - .env
    depends_on:
      - backend

volumes:
  db-data:
  uploads:
